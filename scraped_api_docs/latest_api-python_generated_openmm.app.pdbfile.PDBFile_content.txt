PDBFileÂ¶ class openmm.app.pdbfile.PDBFile(file, extraParticleIdentifier='EP')Â¶ PDBFile parses a Protein Data Bank (PDB) file and constructs a Topology and a set of atom positions from it. This class also provides methods for creating PDB files. To write a file containing a single model, call writeFile(). You also can create files that contain multiple models. To do this, first call writeHeader(), then writeModel() once for each model in the file, and finally writeFooter() to complete the file. __init__(file, extraParticleIdentifier='EP')Â¶ Load a PDB file. The atom positions and Topology can be retrieved by calling getPositions() and getTopology(). Parameters file (string or file) â the name of the file to load. Alternatively you can pass an open file object. extraParticleIdentifier (string='EP') â if this value appears in the element column for an ATOM record, the Atomâs element will be set to None to mark it as an extra particle Methods __init__(file[,Â extraParticleIdentifier]) Load a PDB file. getNumFrames() Get the number of frames stored in the file. getPositions([asNumpy,Â frame]) Get the atomic positions. getTopology() Get the Topology of the model. writeFile(topology,Â positions[,Â file,Â â¦]) Write a PDB file containing a single model. writeFooter(topology[,Â file]) Write out the footer for a PDB file. writeHeader(topology[,Â file]) Write out the header for a PDB file. writeModel(topology,Â positions[,Â file,Â â¦]) Write out a model to a PDB file. getTopology()Â¶ Get the Topology of the model. getNumFrames()Â¶ Get the number of frames stored in the file. getPositions(asNumpy=False, frame=0)Â¶ Get the atomic positions. Parameters asNumpy (boolean=False) â if true, the values are returned as a numpy array instead of a list of Vec3s frame (int=0) â the index of the frame for which to get positions static writeFile(topology, positions, file=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>, keepIds=False, extraParticleIdentifier='EP')Â¶ Write a PDB file containing a single model. Parameters topology (Topology) â The Topology defining the model to write positions (list) â The list of atomic positions to write file (string or file) â the name of the file to write. Alternatively you can pass an open file object. keepIds (bool=False) â If True, keep the residue and chain IDs specified in the Topology rather than generating new ones. Warning: It is up to the caller to make sure these are valid IDs that satisfy the requirements of the PDB format. Otherwise, the output file will be invalid. extraParticleIdentifier (string='EP') â String to write in the element column of the ATOM records for atoms whose element is None (extra particles) static writeHeader(topology, file=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>)Â¶ Write out the header for a PDB file. Parameters topology (Topology) â The Topology defining the molecular system being written file (file=stdout) â A file to write the file to static writeModel(topology, positions, file=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>, modelIndex=None, keepIds=False, extraParticleIdentifier='EP')Â¶ Write out a model to a PDB file. Parameters topology (Topology) â The Topology defining the model to write positions (list) â The list of atomic positions to write file (file=stdout) â A file to write the model to modelIndex (int=None) â If not None, the model will be surrounded by MODEL/ENDMDL records with this index keepIds (bool=False) â If True, keep the residue and chain IDs specified in the Topology rather than generating new ones. Warning: It is up to the caller to make sure these are valid IDs that satisfy the requirements of the PDB format. No guarantees are made about what will happen if they are not, and the output file could be invalid. extraParticleIdentifier (string='EP') â String to write in the element column of the ATOM records for atoms whose element is None (extra particles) static writeFooter(topology, file=<_io.TextIOWrapper name='<stdout>' mode='w' encoding='UTF-8'>)Â¶ Write out the footer for a PDB file. Parameters topology (Topology) â The Topology defining the molecular system being written file (file=stdout) â A file to write the file to