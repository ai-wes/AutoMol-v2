PDBReporterÂ¶ class openmm.app.pdbreporter.PDBReporter(file, reportInterval, enforcePeriodicBox=None, atomSubset=None)Â¶ PDBReporter outputs a series of frames from a Simulation to a PDB file. To use it, create a PDBReporter, then add it to the Simulationâs list of reporters. __init__(file, reportInterval, enforcePeriodicBox=None, atomSubset=None)Â¶ Create a PDBReporter. Parameters file (string) â The file to write to reportInterval (int) â The interval (in time steps) at which to write frames enforcePeriodicBox (bool) â Specifies whether particle positions should be translated so the center of every molecule lies in the same periodic box. If None (the default), it will automatically decide whether to translate molecules based on whether the system being simulated uses periodic boundary conditions. atomSubset (list) â Atom indices (zero indexed) of the particles to output. if None (the default), all particles will be output. Methods __init__(file,Â reportInterval[,Â â¦]) Create a PDBReporter. describeNextReport(simulation) Get information about the next report this object will generate. report(simulation,Â state) Generate a report. describeNextReport(simulation)Â¶ Get information about the next report this object will generate. Parameters simulation (Simulation) â The Simulation to generate a report for Returns A six element tuple. The first element is the number of steps until the next report. The next four elements specify whether that report will require positions, velocities, forces, and energies respectively. The final element specifies whether positions should be wrapped to lie in a single periodic box. Return type tuple report(simulation, state)Â¶ Generate a report. Parameters simulation (Simulation) â The Simulation to generate a report for state (State) â The current state of the simulation