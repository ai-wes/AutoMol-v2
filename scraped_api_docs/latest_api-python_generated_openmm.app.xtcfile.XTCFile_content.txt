XTCFileÂ¶ class openmm.app.xtcfile.XTCFile(fileName, topology, dt, firstStep=0, interval=1, append=False)Â¶ XTCFile provides methods for creating XTC files. To use this class, create a XTCFile object, then call writeModel() once for each model in the file. __init__(fileName, topology, dt, firstStep=0, interval=1, append=False)Â¶ Create a XTC file, or open an existing file to append. Parameters fileName (str) â A file name to write to topology (Topology) â The Topology defining the molecular system being written dt (time) â The time step used in the trajectory firstStep (int=0) â The index of the first step in the trajectory interval (int=1) â The frequency (measured in time steps) at which states are written to the trajectory append (bool=False) â If True, open an existing XTC file to append to. If False, create a new file. Methods __init__(fileName,Â topology,Â dt[,Â â¦]) Create a XTC file, or open an existing file to append. writeModel(positions[,Â unitCellDimensions,Â â¦]) Write out a model to the XTC file. writeModel(positions, unitCellDimensions=None, periodicBoxVectors=None)Â¶ Write out a model to the XTC file. The periodic box can be specified either by the unit cell dimensions (for a rectangular box), or the full set of box vectors (for an arbitrary triclinic box). If neither is specified, the box vectors specified in the Topology will be used. Regardless of the value specified, no dimensions will be written if the Topology does not represent a periodic system. Parameters positions (list) â The list of atomic positions to write unitCellDimensions (Vec3=None) â The dimensions of the crystallographic unit cell. periodicBoxVectors (tuple of Vec3=None) â The vectors defining the periodic box.