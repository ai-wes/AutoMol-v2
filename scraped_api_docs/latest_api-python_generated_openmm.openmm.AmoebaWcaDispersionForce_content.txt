AmoebaWcaDispersionForceÂ¶ class openmm.openmm.AmoebaWcaDispersionForce(*args)Â¶ This class implements a nonbonded interaction between pairs of particles typically used along with AmoebaGeneralizedKirkwoodForce as part of an implicit solvent model. To use it, create an AmoebaWcaDispersionForce object then call addParticle() once for each particle. After a particle has been added, you can modify its force field parameters by calling setParticleParameters(). This will have no effect on Contexts that already exist unless you call updateParametersInContext(). __init__(self) → AmoebaWcaDispersionForceÂ¶ __init__(self, other) → AmoebaWcaDispersionForce Create an AmoebaWcaDispersionForce. Methods __init__(->Â AmoebaWcaDispersionForce) Create an AmoebaWcaDispersionForce. addParticle(self,Â radius,Â epsilon) Set the force field parameters for a WCA dispersion particle. getAwater(self) getDispoff(self) getEpsh(self) getEpso(self) getForceGroup(self) Get the force group this Force belongs to. getName(self) Get the name of this Force. getNumParticles(self) Get the number of particles getParticleParameters(self,Â particleIndex) Get the force field parameters for a WCA dispersion particle. getRminh(self) getRmino(self) getShctd(self) getSlevy(self) setAwater(self,Â inputValue) setDispoff(self,Â inputValue) setEpsh(self,Â inputValue) setEpso(self,Â inputValue) setForceGroup(self,Â group) Set the force group this Force belongs to. setName(self,Â name) Set the name of this Force. setParticleParameters(self,Â particleIndex,Â â¦) Set the force field parameters for a WCA dispersion particle. setRminh(self,Â inputValue) setRmino(self,Â inputValue) setShctd(self,Â inputValue) setSlevy(self,Â inputValue) updateParametersInContext(self,Â context) Update the per-particle parameters in a Context to match those stored in this Force object. usesPeriodicBoundaryConditions(self) Returns whether or not this force makes use of periodic boundary conditions. Attributes thisown The membership flag property thisownÂ¶ The membership flag getNumParticles(self) → intÂ¶ Get the number of particles setParticleParameters(self, particleIndex, radius, epsilon)Â¶ Set the force field parameters for a WCA dispersion particle. Parameters particleIndex (int) â the particle index radius (double) â radius epsilon (double) â epsilon getParticleParameters(self, particleIndex)Â¶ Get the force field parameters for a WCA dispersion particle. Parameters particleIndex (int) â the particle index Returns radius (double) â radius epsilon (double) â epsilon addParticle(self, radius, epsilon) → intÂ¶ Set the force field parameters for a WCA dispersion particle. Parameters radius (double) â radius epsilon (double) â epsilon Returns index of added particle Return type int updateParametersInContext(self, context)Â¶ Update the per-particle parameters in a Context to match those stored in this Force object. This method provides an efficient method to update certain parameters in an existing Context without needing to reinitialize it. Simply call setParticleParameters() to modify this objectâs parameters, then call updateParametersInContext() to copy them over to the Context. The only information this method updates is the values of per-particle parameters. All other aspects of the Force are unaffected and can only be changed by reinitializing the Context. getEpso(self) → doubleÂ¶ getEpsh(self) → doubleÂ¶ getRmino(self) → doubleÂ¶ getRminh(self) → doubleÂ¶ getAwater(self) → doubleÂ¶ getShctd(self) → doubleÂ¶ getDispoff(self) → doubleÂ¶ getSlevy(self) → doubleÂ¶ setEpso(self, inputValue)Â¶ setEpsh(self, inputValue)Â¶ setRmino(self, inputValue)Â¶ setRminh(self, inputValue)Â¶ setAwater(self, inputValue)Â¶ setShctd(self, inputValue)Â¶ setDispoff(self, inputValue)Â¶ setSlevy(self, inputValue)Â¶ usesPeriodicBoundaryConditions(self) → boolÂ¶ Returns whether or not this force makes use of periodic boundary conditions. Returns true if nonbondedMethod uses PBC and false otherwise Return type bool getForceGroup(self) → intÂ¶ Get the force group this Force belongs to. getName(self) → std::string const &Â¶ Get the name of this Force. This is an arbitrary, user modifiable identifier. By default it equals the class name, but you can change it to anything useful. setForceGroup(self, group)Â¶ Set the force group this Force belongs to. Parameters group (int) â the group index. Legal values are between 0 and 31 (inclusive). setName(self, name)Â¶ Set the name of this Force. This is an arbitrary, user modifiable identifier. By default it equals the class name, but you can change it to anything useful.