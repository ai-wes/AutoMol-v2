GBSAOBCForceÂ¶ class openmm.openmm.GBSAOBCForce(*args)Â¶ This class implements an implicit solvation force using the GBSA-OBC model. To use this class, create a GBSAOBCForce object, then call addParticle() once for each particle in the System to define its parameters. The number of particles for which you define GBSA parameters must be exactly equal to the number of particles in the System, or else an exception will be thrown when you try to create a Context. After a particle has been added, you can modify its force field parameters by calling setParticleParameters(). This will have no effect on Contexts that already exist unless you call updateParametersInContext(). When using this Force, the System should also include a NonbondedForce, and both objects must specify identical charges for all particles. Otherwise, the results will not be correct. Furthermore, if the nonbonded method is set to CutoffNonPeriodic or CutoffPeriodic, you should call setReactionFieldDielectric(1.0) on the NonbondedForce to turn off the reaction field approximation, which does not produce correct results when combined with GBSA. __init__(self) → GBSAOBCForceÂ¶ __init__(self, other) → GBSAOBCForce Create a GBSAOBCForce. Methods __init__(->Â GBSAOBCForce) Create a GBSAOBCForce. addParticle(self,Â charge,Â radius,Â scalingFactor) Add the GBSA parameters for a particle. getCutoffDistance(self) Get the cutoff distance (in nm) being used for nonbonded interactions. getForceGroup(self) Get the force group this Force belongs to. getName(self) Get the name of this Force. getNonbondedMethod(self) Get the method used for handling long range nonbonded interactions. getNumParticles(self) Get the number of particles in the system. getParticleParameters(self,Â index) Get the force field parameters for a particle. getSoluteDielectric(self) Get the dielectric constant for the solute. getSolventDielectric(self) Get the dielectric constant for the solvent. getSurfaceAreaEnergy(self) Get the energy scale for the surface energy term, measured in kJ/mol/nm^2. setCutoffDistance(self,Â distance) Set the cutoff distance (in nm) being used for nonbonded interactions. setForceGroup(self,Â group) Set the force group this Force belongs to. setName(self,Â name) Set the name of this Force. setNonbondedMethod(self,Â method) Set the method used for handling long range nonbonded interactions. setParticleParameters(self,Â index,Â charge,Â â¦) Set the force field parameters for a particle. setSoluteDielectric(self,Â dielectric) Set the dielectric constant for the solute. setSolventDielectric(self,Â dielectric) Set the dielectric constant for the solvent. setSurfaceAreaEnergy(self,Â energy) Set the energy scale for the surface energy term, measured in kJ/mol/nm^2. updateParametersInContext(self,Â context) Update the particle parameters in a Context to match those stored in this Force object. usesPeriodicBoundaryConditions(self) Returns whether or not this force makes use of periodic boundary conditions. Attributes CutoffNonPeriodic CutoffPeriodic NoCutoff thisown The membership flag property thisownÂ¶ The membership flag getNumParticles(self) → intÂ¶ Get the number of particles in the system. addParticle(self, charge, radius, scalingFactor) → intÂ¶ Add the GBSA parameters for a particle. This should be called once for each particle in the System. When it is called for the iâth time, it specifies the parameters for the iâth particle. Parameters charge (double) â the charge of the particle, measured in units of the proton charge radius (double) â the GBSA radius of the particle, measured in nm scalingFactor (double) â the OBC scaling factor for the particle Returns the index of the particle that was added Return type int getParticleParameters(self, index)Â¶ Get the force field parameters for a particle. Parameters index (int) â the index of the particle for which to get parameters Returns charge (double) â the charge of the particle, measured in units of the proton charge radius (double) â the GBSA radius of the particle, measured in nm scalingFactor (double) â the OBC scaling factor for the particle setParticleParameters(self, index, charge, radius, scalingFactor)Â¶ Set the force field parameters for a particle. Parameters index (int) â the index of the particle for which to set parameters charge (double) â the charge of the particle, measured in units of the proton charge radius (double) â the GBSA radius of the particle, measured in nm scalingFactor (double) â the OBC scaling factor for the particle getSolventDielectric(self) → doubleÂ¶ Get the dielectric constant for the solvent. setSolventDielectric(self, dielectric)Â¶ Set the dielectric constant for the solvent. getSoluteDielectric(self) → doubleÂ¶ Get the dielectric constant for the solute. setSoluteDielectric(self, dielectric)Â¶ Set the dielectric constant for the solute. getSurfaceAreaEnergy(self) → doubleÂ¶ Get the energy scale for the surface energy term, measured in kJ/mol/nm^2. setSurfaceAreaEnergy(self, energy)Â¶ Set the energy scale for the surface energy term, measured in kJ/mol/nm^2. getNonbondedMethod(self) → OpenMM::GBSAOBCForce::NonbondedMethodÂ¶ Get the method used for handling long range nonbonded interactions. setNonbondedMethod(self, method)Â¶ Set the method used for handling long range nonbonded interactions. getCutoffDistance(self) → doubleÂ¶ Get the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect. Returns the cutoff distance, measured in nm Return type double setCutoffDistance(self, distance)Â¶ Set the cutoff distance (in nm) being used for nonbonded interactions. If the NonbondedMethod in use is NoCutoff, this value will have no effect. Parameters distance (double) â the cutoff distance, measured in nm updateParametersInContext(self, context)Â¶ Update the particle parameters in a Context to match those stored in this Force object. This method provides an efficient method to update certain parameters in an existing Context without needing to reinitialize it. Simply call setParticleParameters() to modify this objectâs parameters, then call updateParametersInContext() to copy them over to the Context. The only information this method updates is the values of per-particle parameters. All other aspects of the Force (the nonbonded method, the cutoff distance, etc.) are unaffected and can only be changed by reinitializing the Context. Furthermore, this method cannot be used to add new particles, only to change the parameters of existing ones. usesPeriodicBoundaryConditions(self) → boolÂ¶ Returns whether or not this force makes use of periodic boundary conditions. Returns true if force uses PBC and false otherwise Return type bool getForceGroup(self) → intÂ¶ Get the force group this Force belongs to. getName(self) → std::string const &Â¶ Get the name of this Force. This is an arbitrary, user modifiable identifier. By default it equals the class name, but you can change it to anything useful. setForceGroup(self, group)Â¶ Set the force group this Force belongs to. Parameters group (int) â the group index. Legal values are between 0 and 31 (inclusive). setName(self, name)Â¶ Set the name of this Force. This is an arbitrary, user modifiable identifier. By default it equals the class name, but you can change it to anything useful.