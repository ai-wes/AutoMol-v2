TwoParticleAverageSiteÂ¶ class openmm.openmm.TwoParticleAverageSite(*args)Â¶ This is a VirtualSite that computes the particle location as a weighted average of two other particleâs locations. This means the virtual site is on the line passing through the two particles. __init__(self, particle1, particle2, weight1, weight2) → TwoParticleAverageSiteÂ¶ __init__(self, other) → TwoParticleAverageSite Create a new TwoParticleAverageSite virtual site. Normally weight1 and weight2 should add up to 1, although this is not strictly required. Parameters particle1 (int) â the index of the first particle particle2 (int) â the index of the second particle weight1 (double) â the weight factor (typically between 0 and 1) for the first particle weight2 (double) â the weight factor (typically between 0 and 1) for the second particle Methods __init__(->Â TwoParticleAverageSite) Create a new TwoParticleAverageSite virtual site. getNumParticles(self) Get the number of particles this virtual site depends on. getParticle(self,Â particle) Get the index of a particle this virtual site depends on. getWeight(self,Â particle) Get the weight factor used for a particle this virtual site depends on. Attributes thisown The membership flag property thisownÂ¶ The membership flag getWeight(self, particle) → doubleÂ¶ Get the weight factor used for a particle this virtual site depends on. Parameters particle (int) â the particle to get (between 0 and getNumParticles()) Returns the weight factor used for that particle Return type double getNumParticles(self) → intÂ¶ Get the number of particles this virtual site depends on. getParticle(self, particle) → intÂ¶ Get the index of a particle this virtual site depends on. Parameters particle (int) â the particle to get (between 0 and getNumParticles()) Returns the index of the particle in the System Return type int